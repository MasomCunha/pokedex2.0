{"version":3,"sources":["img/backgroundpokemon.png","img/pokebackground.jpg","api/PokemonApi.jsx","components/PokeCard.jsx","components/PokedexKanto.jsx","pages/PokedexHome.jsx","api/ApiToDetail.jsx","components/SingleCard.jsx","components/Stats.jsx","pages/SinglePokemon.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ApiData","state","pokemonList","props","addPokemons","console","log","axios","get","then","res","data","results","setState","Component","PokeCard","name","id","to","Card","CardImg","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","PokedexKanto","pokemons","count","map","pokemon","Col","xs","sm","md","key","renderPokemon","PokedexHome","Container","Row","style","fontFamily","color","fontSize","this","backgroundImage","pokedexBackground","overflowX","height","ApiToDetail","pokeDetail","getDetailInfo","flavor_text_entries","getFlavorInfo","flavor_text","SingleCard","mainData","description","type","backgroundColor","top","sprites","front_default","front_shiny","species","types","length","e","weight","Stats","pv","stats","base_stat","cx","cy","outerRadius","dataKey","angle","domain","stroke","fill","fillOpacity","PureComponent","SinglePokemon","match","params","detailInfo","flavorInfo","App","className","path","exact","component","Pokedex","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7b97f00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backgroundpokemon.78745eb1.png\";","module.exports = __webpack_public_path__ + \"static/media/pokebackground.7e45b413.jpg\";","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass ApiData extends Component {\r\n    \r\n    state = {\r\n        pokemonList: null\r\n    }\r\n\r\n    componentDidMount(){\r\n         axios.get('https://pokeapi.co/api/v2/pokemon?limit=151')\r\n      .then(res => {\r\n        //console.log(res.data.results)\r\n        const pokemonList = res.data.results;\r\n        this.setState({ pokemonList: pokemonList });\r\n        //console.log(this.state.pokemonList)\r\n        this.pokemonList()\r\n      })\r\n    }\r\n\r\n    pokemonList = () => {\r\n        (this.state.pokemonList ? \r\n        this.props.addPokemons(this.state.pokemonList) : (console.log(\"no data\")))\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ApiData","\r\nimport React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PokeCard = ({ name, id }) => {\r\n    return (\r\n        <Link to = {`/pokemon/${name}`}>\r\n            <Card>\r\n                <CardImg width=\"100%\" src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + id + \".png\"} alt={name} />\r\n                <CardBody>\r\n                    <CardTitle>#{id} {name} </CardTitle>\r\n                    <CardSubtitle></CardSubtitle>\r\n                    <CardText></CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </Link>\r\n\r\n    );\r\n};\r\n\r\nexport default PokeCard;","import React, { Fragment } from 'react'\r\nimport PokeCard from './PokeCard.jsx'\r\nimport { Col } from 'reactstrap';\r\n\r\nconst PokedexKanto = ({ pokemons }) => {\r\n\r\n\r\n    let renderPokemon = () => {\r\n        let count = 0\r\n        return pokemons.map((pokemon) => {\r\n            count++;\r\n           \r\n            return (\r\n                <Col xs=\"12\" sm=\"6\" md=\"2\" key={pokemon.name} >\r\n                   <PokeCard \r\n                        name = {pokemon.name}\r\n                        id = {count}\r\n                    />\r\n                </Col>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                {pokemons ? (renderPokemon()) : <h1>loading...</h1> }\r\n        </Fragment>\r\n    )\r\n \r\n}\r\n\r\nexport default PokedexKanto","import React, { Component } from 'react'\r\nimport ApiData from '../api/PokemonApi.jsx'\r\nimport Pokedex from '../components/PokedexKanto.jsx'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport pokedexBackground from '../img/backgroundpokemon.png'\r\n\r\n\r\n\r\nclass PokedexHome extends Component {\r\n\r\n    state = {\r\n        pokemons: null\r\n    }\r\n\r\n    addPokemons = (pokemons) => {\r\n        this.setState({\r\n            pokemons\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container >\r\n            {/*style = {{ backgroundImage: `url(${pokedexBackground})`, backgroundRepeat: 'no-repeat', height: \"100%\"}}*/}\r\n                <Row>\r\n                    <Col>\r\n                        <br/>\r\n                        <br/>\r\n                        <h1 style = {{ fontFamily: 'Passion One, cursive', color: \"#FDF300\", fontSize: \"400%\" }}>Pokédex</h1>\r\n                        <h2 style = {{ color: \"#0948B2\", fontSize: \"200%\" }}>Kanto Region</h2>\r\n                        <ApiData addPokemons={this.addPokemons} />\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <Row style={{ backgroundImage: `url(${pokedexBackground})`, overflowX : 'auto', height:'33vw'}}>\r\n                    <Pokedex pokemons={this.state.pokemons} />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PokedexHome","import React, { Component, Fragment } from 'react'\r\nimport axios from 'axios'\r\n\r\nclass ApiToDetail extends Component{\r\n\r\n    state = {\r\n        pokeDetail : null\r\n    }\r\n\r\n    componentDidMount () {\r\n\r\n        axios.get('https://pokeapi.co/api/v2/pokemon/' + `${this.props.pokemon}`)\r\n      .then(res => {\r\n       //console.log(res.data)\r\n        this.setState({\r\n            pokeDetail : res.data\r\n        })\r\n        this.getDetailInfo();\r\n      })\r\n\r\n      axios.get('https://pokeapi.co/api/v2/pokemon-species/' + `${this.props.pokemon}`)\r\n      .then(res => {\r\n         console.log(res.data.flavor_text_entries)\r\n          this.props.getFlavorInfo(res.data.flavor_text_entries[1].flavor_text)\r\n      })\r\n\r\n      \r\n    }\r\n\r\n    getDetailInfo = () => {\r\n        this.state.pokeDetail ? this.props.getDetailInfo(this.state.pokeDetail) : console.log(\"no data\")\r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <Fragment/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ApiToDetail","\r\nimport React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Col, Row } from 'reactstrap';\r\n\r\nconst SingleCard = ({ mainData, description }) => {\r\n\r\n    const type = () => {\r\n        return (\r\n            mainData.types.length === 1 ?\r\n                (\r\n                    <Row>\r\n                        <Col style={{ backgroundColor: color(mainData.types[0].type.name) }}>\r\n                            {mainData.types[0].type.name}\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n                :\r\n                (\r\n                    <Row xs=\"2\">\r\n                        {mainData.types.map((e) => {\r\n                            return (\r\n                                <Col key={e.type.name} style={{ backgroundColor: color(e.type.name) }}>{e.type.name}</Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                )\r\n        )\r\n\r\n    }\r\n\r\n\r\n    const color = (type) => {\r\n        switch (type) {\r\n            case 'normal':\r\n                return \"#9B9B9B\";\r\n            case 'poison':\r\n                return \"#811C9F\";\r\n            case 'psychic':\r\n                return \"#E671E1\";\r\n            case 'grass':\r\n                return \"#07D415\";\r\n            case 'ground':\r\n                return \"#D5C408\";\r\n            case 'ice':\r\n                return \"#92ECEE\"\r\n            case 'fire':\r\n                return \"#F40B2F\";\r\n            case 'rock':\r\n                return \"#A38C2E\";\r\n            case 'dragon':\r\n                return \"#7C96F3\";\r\n            case 'water':\r\n                return \"#2250F6\";\r\n            case 'bug':\r\n                return \"#83C305\";\r\n            case 'dark':\r\n                return \"#171912\"\r\n            case 'fighting':\r\n                return \"#D34F15\";\r\n            case 'ghost':\r\n                return \"#7B3CED\";\r\n            case 'stell':\r\n                return \"#DACDF0\";\r\n            case 'flying':\r\n                return \"#8FC4E3\";\r\n            case 'electric':\r\n                return \"#F7D900\"\r\n            case 'fairy':\r\n                return \"#ED90E9\"\r\n            default:\r\n                console.log(\"no colors\");\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card style={{ backgroundColor: \"yellow\", fontFamily: 'Lora, serif' }}>\r\n                <Row>\r\n                    <Col>\r\n                        <p style={{ fontSize: \"100%\" }}><b>normal form</b></p>\r\n                        <CardImg top width=\"10%\" src={mainData.sprites.front_default} alt=\"Card image cap\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <p style={{ fontSize: \"100%\" }}><b>shiny form</b></p>\r\n                        <CardImg top width=\"10%\" src={mainData.sprites.front_shiny} alt=\"Card image cap\" />\r\n                    </Col>\r\n                </Row>\r\n                <CardBody >\r\n                    <CardTitle style={{ fontSize: \"100%\" }}> <b>#{mainData.id} - {mainData.species.name}</b></CardTitle>\r\n                    <CardSubtitle style={{ fontSize: \"100%\" }}>{type()}</CardSubtitle>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <CardText style={{ fontSize: \"100%\" }}><b>height: {mainData.height / 10} m</b></CardText>\r\n                        </Col>\r\n                        <Col>\r\n                            <CardText style={{ fontSize: \"100%\" }}><b>weight: {mainData.weight / 10} kg</b></CardText>\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <h6><b>Description</b></h6>\r\n                    <br />\r\n                    <p>{description}</p>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleCard;","import React, { PureComponent } from 'react';\r\nimport { Tooltip, RadarChart, PolarGrid, PolarAngleAxis, PolarRadiusAxis, Radar} from 'recharts';\r\n\r\n\r\nclass Stats extends PureComponent {\r\n\r\n    data = [\r\n        {\r\n            name: 'Hp', pv: this.props.mainData.stats[0].base_stat,\r\n        },\r\n        {\r\n            name: 'Attack', pv: this.props.mainData.stats[1].base_stat,\r\n        },\r\n        {\r\n            name: 'Defence', pv: this.props.mainData.stats[2].base_stat,\r\n        },\r\n        {\r\n            name: 'Sp. Attack', pv: this.props.mainData.stats[3].base_stat,\r\n        },\r\n        {\r\n            name: 'Sp. Defence', pv: this.props.mainData.stats[4].base_stat,\r\n        },\r\n        {\r\n            name: 'Speed', pv: this.props.mainData.stats[5].base_stat,\r\n        },\r\n    ];\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ fontFamily: 'Lora, serif' }}>\r\n                <h1>Base Stats</h1>\r\n\r\n                <RadarChart cx={300} cy={250} outerRadius={150} width={500} height={500} data={this.data}>\r\n                    <PolarGrid />\r\n                    <PolarAngleAxis dataKey=\"name\" />\r\n                    <PolarRadiusAxis angle={30} domain={[0, 200]} />\r\n                    <Radar name=\"Pokemon\" dataKey=\"pv\" stroke=\"#1E3B9C\" fill=\"#1E3B9C\" fillOpacity={0.6} />\r\n                    <Tooltip />\r\n                </RadarChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stats","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport ApiToDetail from '../api/ApiToDetail.jsx'\r\nimport SingleCard from '../components/SingleCard.jsx'\r\nimport Stats from '../components/Stats.jsx'\r\n\r\nclass SinglePokemon extends Component {\r\n\r\n    state = {\r\n        pokemon: this.props.match.params.pokemon,\r\n        detailInfo: null,\r\n        flavorInfo: ''\r\n\r\n    }\r\n\r\n    getDetailInfo = (data) => {\r\n        this.setState({\r\n            detailInfo: data\r\n        })\r\n    }\r\n\r\n    getFlavorInfo = (data) => {\r\n        this.setState({\r\n            flavorInfo: data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <ApiToDetail pokemon={this.state.pokemon}\r\n                    getDetailInfo={this.getDetailInfo}\r\n                    getFlavorInfo={this.getFlavorInfo}\r\n                />\r\n                <Row>\r\n                    <Col>\r\n                        <br/>\r\n                        <br/>\r\n                        <h1 style = {{ fontFamily: 'Passion One, cursive', color: \"#FDF300\", fontSize: \"400%\" }}>{this.props.match.params.pokemon}</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {this.state.detailInfo ? \r\n                    <Row md = \"2\">\r\n                    <Col>\r\n                        <SingleCard mainData = {this.state.detailInfo}\r\n                                    description = {this.state.flavorInfo}\r\n                        /> \r\n                    </Col>\r\n                    <Col>\r\n                      <Stats mainData = {this.state.detailInfo}/> \r\n                    </Col>\r\n                </Row>\r\n                : <h1>no information</h1>\r\n                }\r\n                \r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SinglePokemon","import React from 'react';\nimport './App.css'\nimport Pokedex from './pages/PokedexHome.jsx'\nimport SinglePokemon from './pages/SinglePokemon.jsx'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport pokedexBackground from './img/pokebackground.jpg'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundImage: `url(${pokedexBackground})`, height: \"100%\"}}>\n      <BrowserRouter>\n        <Switch>\n          <Route path='/' exact={true} component={ Pokedex } />\n          <Route path=\"/pokemon/:pokemon\" component={ SinglePokemon } />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}